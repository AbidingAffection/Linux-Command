
字符截取命令 cut
	命令格式: cut [选项] 文件名
		  -f 列号:	提取第几列
		  -d 分隔符:	按照指定分隔符分割列
	我们之前说过，grep命令是在文件中查找包含指定内容的行，这里则是提取列


测试文件student内容	
	#值得注意的是 这里的间隔是制表符，而不是空格，否则cut不能正确识别
	ID	Name	gender	Mark
	1	Liming	M	86
	2	Sc 	M	90
	3 	Gao 	M	83
	
	abidingai@abidingai-W65KJ1-KK1:~/Desktop/txt/Linux Command/txt$ cut -f 2 student 
	Name
	Liming
	Sc 
	Gao 
	
	abidingai@abidingai-W65KJ1-KK1:~/Desktop/txt/Linux Command/txt$ cut -f 2,4 student 
	Name	Mark
	Liming	86
	Sc 	90
	Gao 	83

	abidingai@abidingai-W65KJ1-KK1:~$ cut -d ":" -f 1,3 /etc/passwd
	root:0
	daemon:1
	bin:2
	sys:3
	sync:4
	games:5

测试文件passwd
	root:x:0:0:root:/root:/bin/bash
	daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
	bin:x:2:2:bin:/bin:/usr/sbin/nologin
	sys:x:3:3:sys:/dev:/usr/sbin/nologin
	sync:x:4:65534:sync:/bin:/bin/sync
	games:x:5:60:games:/usr/games:/usr/sbin/nologin
	man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
	lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
	mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
	news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
	uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
	abidingai:x:1000:1000:AbidingAi,,,:/home/abidingai:/bin/bash
	user1:x:1001:1001:user1,,,:/home/user1:/bin/bash
	user2:x:1002:1002:user2,,,:/home/user2:/bin/bash
	user3:x:1003:1003:user3,,,:/home/user3:/bin/bash

与grep命令联合使用
	abidingai@abidingai-W65KJ1-KK1:~/Desktop/txt/Linux Command/txt$ cat passwd | grep /bin/bash
	root:x:0:0:root:/root:/bin/bash
	abidingai:x:1000:1000:AbidingAi,,,:/home/abidingai:/bin/bash
	user1:x:1001:1001:user1,,,:/home/user1:/bin/bash
	user2:x:1002:1002:user2,,,:/home/user2:/bin/bash
	user3:x:1003:1003:user3,,,:/home/user3:/bin/bash
	
	abidingai@abidingai-W65KJ1-KK1:~/Desktop/txt/Linux Command/txt$ cat passwd | grep /bin/bash 
	| grep -v root
	abidingai:x:1000:1000:AbidingAi,,,:/home/abidingai:/bin/bash
	user1:x:1001:1001:user1,,,:/home/user1:/bin/bash
	user2:x:1002:1002:user2,,,:/home/user2:/bin/bash
	user3:x:1003:1003:user3,,,:/home/user3:/bin/bash

	abidingai@abidingai-W65KJ1-KK1:~/Desktop/txt/Linux Command/txt$ cat passwd | grep /bin/bash 
	| grep -v root | cut -d ":" -f 1
	abidingai
	user1
	user2
	user3

	然后将这些用户名赋值给一个变量，然后用循环的方式一个一个删除，即可达到批量删除的目的。


cut命令的局限性
	假设我现在想写一个脚本，判断根分区的使用容量，如果超过80%则报警
	abidingai@abidingai-W65KJ1-KK1:~$ df -h
	Filesystem      Size  Used Avail Use% Mounted on
	udev            3.9G     0  3.9G   0% /dev
	tmpfs           786M  2.0M  784M   1% /run
	/dev/sda2       109G   38G   66G  37% /	←这里是根分区

	因为此处的分隔符是多个空格，所以我们没办法提取到 我们认为的 第5列
	abidingai@abidingai-W65KJ1-KK1:~$ df -h | grep sda2
	/dev/sda2       109G   38G   66G  37% /
	abidingai@abidingai-W65KJ1-KK1:~$ df -h | grep sda2 | cut -f 5
	/dev/sda2       109G   38G   66G  37% /
	abidingai@abidingai-W65KJ1-KK1:~$ df -h | grep sda2 | cut -d " " -f 5

	所以对于比较简单的分割，例如以 ： ， . \t 作为分割的内容，都可以使用cut
	而对于多个空格实现的分割，则cut会失效，此时考虑awk指令，但是awk实际具备了编程语言的功能
	所以使用起来更加的复杂，所谓有利有弊，具体情况具体分析。
	
	
	
	



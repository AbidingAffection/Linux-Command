
sed命令
	sed是一种几乎包括在所有UNIX平台(包括Linux)的轻量级流编辑器。
	sed主要是用来将数据进行选取、替换、删除和新增的命令。
	(流编辑器是只可以接收管道符的值，而像vi这种指令不能直接修改指令执行后的结果)
	
	sed [选项] '[动作]' 文件名
	选项:
		-n		一般sed命令会把所有的数都输出到屏幕，如果加入此选项，
				则只会把经过sed命令处理的行输出到屏幕
		-e		允许对输入数据应用多条sed命令编辑
		-i		用sed的修改结果直接修改读取数据的文件，而不是由屏幕输出
		
		
	动作:
		a \:	追加，在当前行后添加一行或多行。添加多行时，除最后一行外，每行末尾需要用"\"代表数据未完结。
		c \:	行替换，用c后面的字符串替换原数据行，替换多行时，除最后一行外，每行末尾需要用"\"代表数据未完结。
		i \:	插入，在当前行前插入一行或多行。插入多行时，除最后一行外，每行末尾需要用"\"代表数据未完结。
		d:		删除，删除指定的行。
		p:		打印，输出指定的行。
		s:		字串替换，用一个字符串替换另外一个字符串。格式为"行范围s/旧字串/新字串/g"
		(实际上，我们输出的指令过长需要换行的时候，也是用"\"，现在数据的修改也可以用"\")
		
		因为sed命令一般会把所有的数据都输出到屏幕上，那么加入2p表示将第2行又再输出一遍
		abidingai@abidingai-W65KJ1-KK1:~/Desktop/txt/Linux Command/txt$ sed '2p' student 
			ID	Name	gender	Mark
			1	Liming	M	86
			1	Liming	M	86
			2	Sc 		M	90
			3 	Gao 	M	83
		
		但是通常我们只需要输出sed处理的行，也就是只输出第二行，所以加上-n选项即可
		abidingai@abidingai-W65KJ1-KK1:$ sed -n '2p' student 
			1	Liming	M	86

		删除第2行到第3行的数据，但是不修改原文件中的内容，如果要更改文件本身，则需要加入-i选项
		abidingai@abidingai-W65KJ1-KK1:$ sed '2,3d' student 
			ID	Name	gender	Mark
			3 	Gao 	M	83

		在第二行后面追加 hello world，实际上是新开了一行作为第三行，也是没有修改文件内容
		abidingai@abidingai-W65KJ1-KK1:$ sed '2a hello world' student 
			ID	Name	gender	Mark
			1	Liming	M	86
			hello world
			2	Sc 	M	90
			3 	Gao 	M	83
			
		在第二行前面插入 hello world，实际上是将hello world作为第二行，然后其余的后移
		abidingai@abidingai-W65KJ1-KK1:$ sed '2i hello world' student 
			ID	Name	gender	Mark
			hello world
			1	Liming	M	86
			2	Sc 	M	90
			3 	Gao 	M	83

		使用c 替换整行
		abidingai@abidingai-W65KJ1-KK1:$ sed '3c No Such Person' student 
			ID	Name	gender	Mark
			1	Liming	M	86
			No Such Person
			3 	Gao 	M	83

		使用 s/xxx/xxx/g 替换字串
		abidingai@abidingai-W65KJ1-KK1:$ sed '4s/83/93/g' student 
			ID	Name	gender	Mark
			1	Liming	M	86
			2	Sc 	M	90
			3 	Gao 	M	93

		使用-e 同时执行多个编辑，多个编辑之间使用;隔开
		abidingai@abidingai-W65KJ1-KK1:$ sed -e 's/Liming//g; s/Gao//g' student 
			ID	Name	gender	Mark
			1		M	86
			2	Sc 	M	90
			3 	 	M	83

	

